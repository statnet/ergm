% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control.san.R
\name{control.san}
\alias{control.san}
\title{Auxiliary for Controlling SAN}
\usage{
control.san(coef = NULL, SAN.tau = 1, SAN.invcov = NULL,
  SAN.burnin = 1e+05, SAN.interval = 10000, SAN.init.maxedges = 20000,
  SAN.prop.weights = "default", SAN.prop.args = list(),
  SAN.packagenames = c(), MPLE.max.dyad.types = 1e+06,
  MPLE.samplesize = 50000, network.output = "network", seed = NULL,
  parallel = 0, parallel.type = NULL, parallel.version.check = TRUE)
}
\arguments{
\item{coef}{Vector of model coefficients used for MCMC simulations, one for
each model term.}

\item{SAN.tau}{Currently unused.}

\item{SAN.invcov}{Initial inverse covariance matrix used to calculate
Mahalanobis distance in determining how far a proposed MCMC move is from the
\code{target.stats} vector.  If NULL, taken to be the covariance matrix
returned when fitting the MPLE if \code{coef==NULL}, or the identity matrix
otherwise.}

\item{SAN.burnin}{Number of MCMC proposals before any sampling is done.}

\item{SAN.interval}{Number of proposals between sampled statistics.}

\item{SAN.init.maxedges}{Maximum number of edges expected in network.}

\item{SAN.prop.weights}{Specifies the method to allocate probabilities of
being proposed to dyads. Defaults to \code{"default"}, which picks a
reasonable default for the specified constraint.  Other possible values are
\code{"TNT"}, \code{"random"}, and \code{"nonobserved"}, though not all
values may be used with all possible constraints.}

\item{SAN.prop.args}{An alternative, direct way of specifying additional
arguments to proposal.}

\item{SAN.packagenames}{Names of packages in which to look for change
statistic functions in addition to those autodetected. This argument should
not be needed outside of very strange setups.}

\item{MPLE.max.dyad.types}{Maximum number of unique values of change
statistic vectors, which are the predictors in a logistic regression used to
calculate the MPLE.  This calculation uses a compression algorithm that
allocates space based on \code{MPLE.max.dyad.types}}

\item{MPLE.samplesize}{Not currently documented; used in
conditional-on-degree version of MPLE.}

\item{network.output}{R class with which to output networks. The options are
"network" (default) and "edgelist.compressed" (which saves space but only
supports networks without vertex attributes)}

\item{seed}{Seed value (integer) for the random number generator.  See
\code{\link[base]{set.seed}}.}

\item{parallel}{Number of threads in which to run the sampling. Defaults to
0 (no parallelism). See the entry on \link[=ergm-parallel]{parallel processing}
for details and troubleshooting.}

\item{parallel.type}{API to use for parallel processing. Supported values
are \code{"MPI"} and \code{"PSOCK"}. Defaults to using the \code{parallel}
package with PSOCK clusters. See \code{\link{ergm-parallel}}}

\item{parallel.version.check}{Logical: If TRUE, check that the version of
\code{\link[=ergm-package]{ergm}} running on the slave nodes is the same as
that running on the master node.}
}
\value{
A list with arguments as components.
}
\description{
Auxiliary function as user interface for fine-tuning simulated annealing
algorithm.
}
\details{
This function is only used within a call to the \code{\link{san}} function.
See the \code{usage} section in \code{\link{san}} for details.
}
\seealso{
\code{\link{san}}
}
\keyword{models}
